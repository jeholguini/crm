type Query {
  directus_sync_id_map(filter: directus_sync_id_map_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [directus_sync_id_map!]!
  directus_sync_id_map_by_id(id: ID!, version: String): directus_sync_id_map
  directus_sync_id_map_aggregated(groupBy: [String], filter: directus_sync_id_map_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [directus_sync_id_map_aggregated!]!
  directus_sync_id_map_by_version(version: String!, id: ID!): version_directus_sync_id_map
  positions(filter: positions_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [positions!]!
  positions_by_id(id: ID!, version: String): positions
  positions_aggregated(groupBy: [String], filter: positions_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [positions_aggregated!]!
  positions_by_version(version: String!, id: ID!): version_positions
  keywords(filter: keywords_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [keywords!]!
  keywords_by_id(id: ID!, version: String): keywords
  keywords_aggregated(groupBy: [String], filter: keywords_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [keywords_aggregated!]!
  keywords_by_version(version: String!, id: ID!): version_keywords
  locations(filter: locations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [locations!]!
  locations_by_id(id: ID!, version: String): locations
  locations_aggregated(groupBy: [String], filter: locations_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [locations_aggregated!]!
  locations_by_version(version: String!, id: ID!): version_locations
  technologies(filter: technologies_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [technologies!]!
  technologies_by_id(id: ID!, version: String): technologies
  technologies_aggregated(groupBy: [String], filter: technologies_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [technologies_aggregated!]!
  technologies_by_version(version: String!, id: ID!): version_technologies
  enterprises_locations(filter: enterprises_locations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [enterprises_locations!]!
  enterprises_locations_by_id(id: ID!, version: String): enterprises_locations
  enterprises_locations_aggregated(groupBy: [String], filter: enterprises_locations_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [enterprises_locations_aggregated!]!
  enterprises_locations_by_version(version: String!, id: ID!): version_enterprises_locations
  enterprises_technologies(filter: enterprises_technologies_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [enterprises_technologies!]!
  enterprises_technologies_by_id(id: ID!, version: String): enterprises_technologies
  enterprises_technologies_aggregated(groupBy: [String], filter: enterprises_technologies_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [enterprises_technologies_aggregated!]!
  enterprises_technologies_by_version(version: String!, id: ID!): version_enterprises_technologies
  people(filter: people_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [people!]!
  people_by_id(id: ID!, version: String): people
  people_aggregated(groupBy: [String], filter: people_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [people_aggregated!]!
  people_by_version(version: String!, id: ID!): version_people
  people_technologies(filter: people_technologies_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [people_technologies!]!
  people_technologies_by_id(id: ID!, version: String): people_technologies
  people_technologies_aggregated(groupBy: [String], filter: people_technologies_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [people_technologies_aggregated!]!
  people_technologies_by_version(version: String!, id: ID!): version_people_technologies
  person_employment_history(filter: person_employment_history_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [person_employment_history!]!
  person_employment_history_by_id(id: ID!, version: String): person_employment_history
  person_employment_history_aggregated(groupBy: [String], filter: person_employment_history_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [person_employment_history_aggregated!]!
  person_employment_history_by_version(version: String!, id: ID!): version_person_employment_history
  industries(filter: industries_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [industries!]!
  industries_by_id(id: ID!, version: String): industries
  industries_aggregated(groupBy: [String], filter: industries_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [industries_aggregated!]!
  industries_by_version(version: String!, id: ID!): version_industries
  people_keywords(filter: people_keywords_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [people_keywords!]!
  people_keywords_by_id(id: ID!, version: String): people_keywords
  people_keywords_aggregated(groupBy: [String], filter: people_keywords_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [people_keywords_aggregated!]!
  people_keywords_by_version(version: String!, id: ID!): version_people_keywords
  enterprises_keywords(filter: enterprises_keywords_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [enterprises_keywords!]!
  enterprises_keywords_by_id(id: ID!, version: String): enterprises_keywords
  enterprises_keywords_aggregated(groupBy: [String], filter: enterprises_keywords_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [enterprises_keywords_aggregated!]!
  enterprises_keywords_by_version(version: String!, id: ID!): version_enterprises_keywords
  segments(filter: segments_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [segments!]!
  segments_by_id(id: ID!, version: String): segments
  segments_aggregated(groupBy: [String], filter: segments_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [segments_aggregated!]!
  segments_by_version(version: String!, id: ID!): version_segments
  enterprises_tags(filter: enterprises_tags_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [enterprises_tags!]!
  enterprises_tags_by_id(id: ID!, version: String): enterprises_tags
  enterprises_tags_aggregated(groupBy: [String], filter: enterprises_tags_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [enterprises_tags_aggregated!]!
  enterprises_tags_by_version(version: String!, id: ID!): version_enterprises_tags
  enterprise_tags(filter: enterprise_tags_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [enterprise_tags!]!
  enterprise_tags_by_id(id: ID!, version: String): enterprise_tags
  enterprise_tags_aggregated(groupBy: [String], filter: enterprise_tags_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [enterprise_tags_aggregated!]!
  enterprise_tags_by_version(version: String!, id: ID!): version_enterprise_tags
  people_tags(filter: people_tags_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [people_tags!]!
  people_tags_by_id(id: ID!, version: String): people_tags
  people_tags_aggregated(groupBy: [String], filter: people_tags_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [people_tags_aggregated!]!
  people_tags_by_version(version: String!, id: ID!): version_people_tags
  enterprises_industries(filter: enterprises_industries_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [enterprises_industries!]!
  enterprises_industries_by_id(id: ID!, version: String): enterprises_industries
  enterprises_industries_aggregated(groupBy: [String], filter: enterprises_industries_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [enterprises_industries_aggregated!]!
  enterprises_industries_by_version(version: String!, id: ID!): version_enterprises_industries
  enterprises(filter: enterprises_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [enterprises!]!
  enterprises_by_id(id: ID!, version: String): enterprises
  enterprises_aggregated(groupBy: [String], filter: enterprises_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [enterprises_aggregated!]!
  enterprises_by_version(version: String!, id: ID!): version_enterprises
}

type Mutation {
  create_directus_sync_id_map_items(filter: directus_sync_id_map_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_directus_sync_id_map_input!]): [directus_sync_id_map!]!
  create_directus_sync_id_map_item(data: create_directus_sync_id_map_input!): directus_sync_id_map
  create_positions_items(filter: positions_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_positions_input!]): [positions!]!
  create_positions_item(data: create_positions_input!): positions
  create_keywords_items(filter: keywords_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_keywords_input!]): [keywords!]!
  create_keywords_item(data: create_keywords_input!): keywords
  create_locations_items(filter: locations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_locations_input!]): [locations!]!
  create_locations_item(data: create_locations_input!): locations
  create_technologies_items(filter: technologies_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_technologies_input!]): [technologies!]!
  create_technologies_item(data: create_technologies_input!): technologies
  create_enterprises_locations_items(filter: enterprises_locations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_enterprises_locations_input!]): [enterprises_locations!]!
  create_enterprises_locations_item(data: create_enterprises_locations_input!): enterprises_locations
  create_enterprises_technologies_items(filter: enterprises_technologies_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_enterprises_technologies_input!]): [enterprises_technologies!]!
  create_enterprises_technologies_item(data: create_enterprises_technologies_input!): enterprises_technologies
  create_people_items(filter: people_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_people_input!]): [people!]!
  create_people_item(data: create_people_input!): people
  create_people_technologies_items(filter: people_technologies_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_people_technologies_input!]): [people_technologies!]!
  create_people_technologies_item(data: create_people_technologies_input!): people_technologies
  create_person_employment_history_items(filter: person_employment_history_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_person_employment_history_input!]): [person_employment_history!]!
  create_person_employment_history_item(data: create_person_employment_history_input!): person_employment_history
  create_industries_items(filter: industries_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_industries_input!]): [industries!]!
  create_industries_item(data: create_industries_input!): industries
  create_people_keywords_items(filter: people_keywords_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_people_keywords_input!]): [people_keywords!]!
  create_people_keywords_item(data: create_people_keywords_input!): people_keywords
  create_enterprises_keywords_items(filter: enterprises_keywords_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_enterprises_keywords_input!]): [enterprises_keywords!]!
  create_enterprises_keywords_item(data: create_enterprises_keywords_input!): enterprises_keywords
  create_segments_items(filter: segments_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_segments_input!]): [segments!]!
  create_segments_item(data: create_segments_input!): segments
  create_enterprises_tags_items(filter: enterprises_tags_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_enterprises_tags_input!]): [enterprises_tags!]!
  create_enterprises_tags_item(data: create_enterprises_tags_input!): enterprises_tags
  create_enterprise_tags_items(filter: enterprise_tags_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_enterprise_tags_input!]): [enterprise_tags!]!
  create_enterprise_tags_item(data: create_enterprise_tags_input!): enterprise_tags
  create_people_tags_items(filter: people_tags_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_people_tags_input!]): [people_tags!]!
  create_people_tags_item(data: create_people_tags_input!): people_tags
  create_enterprises_industries_items(filter: enterprises_industries_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_enterprises_industries_input!]): [enterprises_industries!]!
  create_enterprises_industries_item(data: create_enterprises_industries_input!): enterprises_industries
  create_enterprises_items(filter: enterprises_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_enterprises_input!]): [enterprises!]!
  create_enterprises_item(data: create_enterprises_input!): enterprises
  update_directus_sync_id_map_items(filter: directus_sync_id_map_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_directus_sync_id_map_input!): [directus_sync_id_map!]!
  update_directus_sync_id_map_batch(filter: directus_sync_id_map_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_directus_sync_id_map_input!]): [directus_sync_id_map!]!
  update_directus_sync_id_map_item(id: ID!, data: update_directus_sync_id_map_input!): directus_sync_id_map
  update_positions_items(filter: positions_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_positions_input!): [positions!]!
  update_positions_batch(filter: positions_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_positions_input!]): [positions!]!
  update_positions_item(id: ID!, data: update_positions_input!): positions
  update_keywords_items(filter: keywords_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_keywords_input!): [keywords!]!
  update_keywords_batch(filter: keywords_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_keywords_input!]): [keywords!]!
  update_keywords_item(id: ID!, data: update_keywords_input!): keywords
  update_locations_items(filter: locations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_locations_input!): [locations!]!
  update_locations_batch(filter: locations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_locations_input!]): [locations!]!
  update_locations_item(id: ID!, data: update_locations_input!): locations
  update_technologies_items(filter: technologies_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_technologies_input!): [technologies!]!
  update_technologies_batch(filter: technologies_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_technologies_input!]): [technologies!]!
  update_technologies_item(id: ID!, data: update_technologies_input!): technologies
  update_enterprises_locations_items(filter: enterprises_locations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_enterprises_locations_input!): [enterprises_locations!]!
  update_enterprises_locations_batch(filter: enterprises_locations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_enterprises_locations_input!]): [enterprises_locations!]!
  update_enterprises_locations_item(id: ID!, data: update_enterprises_locations_input!): enterprises_locations
  update_enterprises_technologies_items(filter: enterprises_technologies_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_enterprises_technologies_input!): [enterprises_technologies!]!
  update_enterprises_technologies_batch(filter: enterprises_technologies_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_enterprises_technologies_input!]): [enterprises_technologies!]!
  update_enterprises_technologies_item(id: ID!, data: update_enterprises_technologies_input!): enterprises_technologies
  update_people_items(filter: people_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_people_input!): [people!]!
  update_people_batch(filter: people_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_people_input!]): [people!]!
  update_people_item(id: ID!, data: update_people_input!): people
  update_people_technologies_items(filter: people_technologies_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_people_technologies_input!): [people_technologies!]!
  update_people_technologies_batch(filter: people_technologies_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_people_technologies_input!]): [people_technologies!]!
  update_people_technologies_item(id: ID!, data: update_people_technologies_input!): people_technologies
  update_person_employment_history_items(filter: person_employment_history_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_person_employment_history_input!): [person_employment_history!]!
  update_person_employment_history_batch(filter: person_employment_history_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_person_employment_history_input!]): [person_employment_history!]!
  update_person_employment_history_item(id: ID!, data: update_person_employment_history_input!): person_employment_history
  update_industries_items(filter: industries_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_industries_input!): [industries!]!
  update_industries_batch(filter: industries_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_industries_input!]): [industries!]!
  update_industries_item(id: ID!, data: update_industries_input!): industries
  update_people_keywords_items(filter: people_keywords_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_people_keywords_input!): [people_keywords!]!
  update_people_keywords_batch(filter: people_keywords_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_people_keywords_input!]): [people_keywords!]!
  update_people_keywords_item(id: ID!, data: update_people_keywords_input!): people_keywords
  update_enterprises_keywords_items(filter: enterprises_keywords_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_enterprises_keywords_input!): [enterprises_keywords!]!
  update_enterprises_keywords_batch(filter: enterprises_keywords_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_enterprises_keywords_input!]): [enterprises_keywords!]!
  update_enterprises_keywords_item(id: ID!, data: update_enterprises_keywords_input!): enterprises_keywords
  update_segments_items(filter: segments_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_segments_input!): [segments!]!
  update_segments_batch(filter: segments_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_segments_input!]): [segments!]!
  update_segments_item(id: ID!, data: update_segments_input!): segments
  update_enterprises_tags_items(filter: enterprises_tags_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_enterprises_tags_input!): [enterprises_tags!]!
  update_enterprises_tags_batch(filter: enterprises_tags_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_enterprises_tags_input!]): [enterprises_tags!]!
  update_enterprises_tags_item(id: ID!, data: update_enterprises_tags_input!): enterprises_tags
  update_enterprise_tags_items(filter: enterprise_tags_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_enterprise_tags_input!): [enterprise_tags!]!
  update_enterprise_tags_batch(filter: enterprise_tags_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_enterprise_tags_input!]): [enterprise_tags!]!
  update_enterprise_tags_item(id: ID!, data: update_enterprise_tags_input!): enterprise_tags
  update_people_tags_items(filter: people_tags_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_people_tags_input!): [people_tags!]!
  update_people_tags_batch(filter: people_tags_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_people_tags_input!]): [people_tags!]!
  update_people_tags_item(id: ID!, data: update_people_tags_input!): people_tags
  update_enterprises_industries_items(filter: enterprises_industries_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_enterprises_industries_input!): [enterprises_industries!]!
  update_enterprises_industries_batch(filter: enterprises_industries_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_enterprises_industries_input!]): [enterprises_industries!]!
  update_enterprises_industries_item(id: ID!, data: update_enterprises_industries_input!): enterprises_industries
  update_enterprises_items(filter: enterprises_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_enterprises_input!): [enterprises!]!
  update_enterprises_batch(filter: enterprises_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_enterprises_input!]): [enterprises!]!
  update_enterprises_item(id: ID!, data: update_enterprises_input!): enterprises
  delete_directus_sync_id_map_items(ids: [ID]!): delete_many
  delete_directus_sync_id_map_item(id: ID!): delete_one
  delete_positions_items(ids: [ID]!): delete_many
  delete_positions_item(id: ID!): delete_one
  delete_keywords_items(ids: [ID]!): delete_many
  delete_keywords_item(id: ID!): delete_one
  delete_locations_items(ids: [ID]!): delete_many
  delete_locations_item(id: ID!): delete_one
  delete_technologies_items(ids: [ID]!): delete_many
  delete_technologies_item(id: ID!): delete_one
  delete_enterprises_locations_items(ids: [ID]!): delete_many
  delete_enterprises_locations_item(id: ID!): delete_one
  delete_enterprises_technologies_items(ids: [ID]!): delete_many
  delete_enterprises_technologies_item(id: ID!): delete_one
  delete_people_items(ids: [ID]!): delete_many
  delete_people_item(id: ID!): delete_one
  delete_people_technologies_items(ids: [ID]!): delete_many
  delete_people_technologies_item(id: ID!): delete_one
  delete_person_employment_history_items(ids: [ID]!): delete_many
  delete_person_employment_history_item(id: ID!): delete_one
  delete_industries_items(ids: [ID]!): delete_many
  delete_industries_item(id: ID!): delete_one
  delete_people_keywords_items(ids: [ID]!): delete_many
  delete_people_keywords_item(id: ID!): delete_one
  delete_enterprises_keywords_items(ids: [ID]!): delete_many
  delete_enterprises_keywords_item(id: ID!): delete_one
  delete_segments_items(ids: [ID]!): delete_many
  delete_segments_item(id: ID!): delete_one
  delete_enterprises_tags_items(ids: [ID]!): delete_many
  delete_enterprises_tags_item(id: ID!): delete_one
  delete_enterprise_tags_items(ids: [ID]!): delete_many
  delete_enterprise_tags_item(id: ID!): delete_one
  delete_people_tags_items(ids: [ID]!): delete_many
  delete_people_tags_item(id: ID!): delete_one
  delete_enterprises_industries_items(ids: [ID]!): delete_many
  delete_enterprises_industries_item(id: ID!): delete_one
  delete_enterprises_items(ids: [ID]!): delete_many
  delete_enterprises_item(id: ID!): delete_one
}

type Subscription {
  directus_roles_mutated(event: EventEnum): directus_roles_mutated
  directus_files_mutated(event: EventEnum): directus_files_mutated
  directus_folders_mutated(event: EventEnum): directus_folders_mutated
  directus_activity_mutated(event: EventEnum): directus_activity_mutated
  directus_revisions_mutated(event: EventEnum): directus_revisions_mutated
  directus_users_mutated(event: EventEnum): directus_users_mutated
  directus_permissions_mutated(event: EventEnum): directus_permissions_mutated
  directus_presets_mutated(event: EventEnum): directus_presets_mutated
  directus_webhooks_mutated(event: EventEnum): directus_webhooks_mutated
  directus_panels_mutated(event: EventEnum): directus_panels_mutated
  directus_notifications_mutated(event: EventEnum): directus_notifications_mutated
  directus_shares_mutated(event: EventEnum): directus_shares_mutated
  directus_flows_mutated(event: EventEnum): directus_flows_mutated
  directus_operations_mutated(event: EventEnum): directus_operations_mutated
  directus_dashboards_mutated(event: EventEnum): directus_dashboards_mutated
  directus_translations_mutated(event: EventEnum): directus_translations_mutated
  directus_access_mutated(event: EventEnum): directus_access_mutated
  directus_comments_mutated(event: EventEnum): directus_comments_mutated
  directus_versions_mutated(event: EventEnum): directus_versions_mutated
  directus_settings_mutated(event: EventEnum): directus_settings_mutated
  directus_policies_mutated(event: EventEnum): directus_policies_mutated
  directus_sync_id_map_mutated(event: EventEnum): directus_sync_id_map_mutated
  positions_mutated(event: EventEnum): positions_mutated
  keywords_mutated(event: EventEnum): keywords_mutated
  locations_mutated(event: EventEnum): locations_mutated
  technologies_mutated(event: EventEnum): technologies_mutated
  enterprises_locations_mutated(event: EventEnum): enterprises_locations_mutated
  enterprises_technologies_mutated(event: EventEnum): enterprises_technologies_mutated
  people_mutated(event: EventEnum): people_mutated
  people_technologies_mutated(event: EventEnum): people_technologies_mutated
  person_employment_history_mutated(event: EventEnum): person_employment_history_mutated
  industries_mutated(event: EventEnum): industries_mutated
  people_keywords_mutated(event: EventEnum): people_keywords_mutated
  enterprises_keywords_mutated(event: EventEnum): enterprises_keywords_mutated
  segments_mutated(event: EventEnum): segments_mutated
  enterprises_tags_mutated(event: EventEnum): enterprises_tags_mutated
  enterprise_tags_mutated(event: EventEnum): enterprise_tags_mutated
  people_tags_mutated(event: EventEnum): people_tags_mutated
  enterprises_industries_mutated(event: EventEnum): enterprises_industries_mutated
  enterprises_mutated(event: EventEnum): enterprises_mutated
}

"""The `Boolean` scalar type represents `true` or `false`."""
scalar Boolean

"""ISO8601 Date values"""
scalar Date

"""
The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point).
"""
scalar Float

"""BigInt value"""
scalar GraphQLBigInt

"""A Float or a String"""
scalar GraphQLStringOrFloat

"""Hashed string values"""
scalar Hash

"""
The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `"4"`) or integer (such as `4`) input value will be accepted as an ID.
"""
scalar ID

"""
The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.
"""
scalar Int

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON

"""
The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
"""
scalar String

enum EventEnum {
  create
  update
  delete
}

type count_functions {
  count: Int
}

type date_functions {
  year: Int
  month: Int
  week: Int
  day: Int
  weekday: Int
}

type datetime_functions {
  year: Int
  month: Int
  week: Int
  day: Int
  weekday: Int
  hour: Int
  minute: Int
  second: Int
}

type delete_many {
  ids: [ID]!
}

type delete_one {
  id: ID!
}

type directus_access {
  id: ID!
  role(filter: directus_roles_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_roles
  user(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  policy(filter: directus_policies_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_policies
  sort: Int
}

type directus_access_mutated {
  key: ID!
  event: EventEnum
  data: directus_access
}

type directus_activity {
  id: ID!
  action: String!
  user(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  timestamp: Date
  timestamp_func: datetime_functions
  ip: String
  user_agent: String
  collection: String!
  item: String!
  origin: String
  revisions(filter: directus_revisions_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [directus_revisions]
  revisions_func: count_functions
}

type directus_activity_mutated {
  key: ID!
  event: EventEnum
  data: directus_activity
}

type directus_comments {
  id: ID!
  collection: String!
  item: String!
  comment: String!
  date_created: Date
  date_created_func: datetime_functions
  date_updated: Date
  date_updated_func: datetime_functions
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
}

type directus_comments_mutated {
  key: ID!
  event: EventEnum
  data: directus_comments
}

type directus_dashboards {
  id: ID!
  name: String!
  icon: String
  note: String
  date_created: Date
  date_created_func: datetime_functions
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  color: String
  panels(filter: directus_panels_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [directus_panels]
  panels_func: count_functions
}

type directus_dashboards_mutated {
  key: ID!
  event: EventEnum
  data: directus_dashboards
}

type directus_files {
  id: ID!
  storage: String!
  filename_disk: String
  filename_download: String!
  title: String
  type: String
  folder(filter: directus_folders_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_folders
  uploaded_by(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  created_on: Date
  created_on_func: datetime_functions
  modified_by(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  modified_on: Date
  modified_on_func: datetime_functions
  charset: String
  filesize: GraphQLBigInt
  width: Int
  height: Int
  duration: Int
  embed: String
  description: String
  location: String
  tags: JSON
  tags_func: count_functions
  metadata: JSON
  metadata_func: count_functions
  focal_point_x: Int
  focal_point_y: Int
  tus_id: String
  tus_data: JSON
  tus_data_func: count_functions
  uploaded_on: Date
  uploaded_on_func: datetime_functions
}

type directus_files_mutated {
  key: ID!
  event: EventEnum
  data: directus_files
}

type directus_flows {
  id: ID!
  name: String!
  icon: String
  color: String
  description: String
  status: String
  trigger: String
  accountability: String
  options: JSON
  options_func: count_functions
  operation(filter: directus_operations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_operations
  date_created: Date
  date_created_func: datetime_functions
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  operations(filter: directus_operations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [directus_operations]
  operations_func: count_functions
}

type directus_flows_mutated {
  key: ID!
  event: EventEnum
  data: directus_flows
}

type directus_folders {
  id: ID!
  name: String!
  parent(filter: directus_folders_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_folders
}

type directus_folders_mutated {
  key: ID!
  event: EventEnum
  data: directus_folders
}

type directus_notifications {
  id: ID!
  timestamp: Date
  timestamp_func: datetime_functions
  status: String
  recipient(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  sender(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  subject: String!
  message: String
  collection: String
  item: String
}

type directus_notifications_mutated {
  key: ID!
  event: EventEnum
  data: directus_notifications
}

type directus_operations {
  id: ID!
  name: String
  key: String!
  type: String!
  position_x: Int!
  position_y: Int!
  options: JSON
  options_func: count_functions
  resolve(filter: directus_operations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_operations
  reject(filter: directus_operations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_operations
  flow(filter: directus_flows_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_flows
  date_created: Date
  date_created_func: datetime_functions
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
}

type directus_operations_mutated {
  key: ID!
  event: EventEnum
  data: directus_operations
}

type directus_panels {
  id: ID!
  dashboard(filter: directus_dashboards_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_dashboards
  name: String
  icon: String
  color: String
  show_header: Boolean!
  note: String
  type: String!
  position_x: Int!
  position_y: Int!
  width: Int!
  height: Int!
  options: JSON
  options_func: count_functions
  date_created: Date
  date_created_func: datetime_functions
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
}

type directus_panels_mutated {
  key: ID!
  event: EventEnum
  data: directus_panels
}

type directus_permissions {
  id: ID
  collection: String!
  action: String!
  permissions: JSON
  permissions_func: count_functions
  validation: JSON
  validation_func: count_functions
  presets: JSON
  presets_func: count_functions
  fields: [String]
  policy(filter: directus_policies_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_policies
}

type directus_permissions_mutated {
  key: ID!
  event: EventEnum
  data: directus_permissions
}

type directus_policies {
  id: ID!
  name: String!
  icon: String
  description: String
  ip_access: [String]

  """$t:field_options.directus_policies.enforce_tfa"""
  enforce_tfa: Boolean!
  admin_access: Boolean!
  app_access: Boolean!
  permissions(filter: directus_permissions_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [directus_permissions]
  permissions_func: count_functions
  users(filter: directus_access_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [directus_access]
  users_func: count_functions
  roles(filter: directus_access_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [directus_access]
  roles_func: count_functions
}

type directus_policies_mutated {
  key: ID!
  event: EventEnum
  data: directus_policies
}

type directus_presets {
  id: ID!
  bookmark: String
  user(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  role(filter: directus_roles_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_roles
  collection: String
  search: String
  layout: String
  layout_query: JSON
  layout_query_func: count_functions
  layout_options: JSON
  layout_options_func: count_functions
  refresh_interval: Int
  filter: JSON
  filter_func: count_functions
  icon: String
  color: String
}

type directus_presets_mutated {
  key: ID!
  event: EventEnum
  data: directus_presets
}

type directus_revisions {
  id: ID!
  activity(filter: directus_activity_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_activity
  collection: String!
  item: String!
  data: JSON
  data_func: count_functions
  delta: JSON
  delta_func: count_functions
  parent(filter: directus_revisions_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_revisions
  version(filter: directus_versions_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_versions
}

type directus_revisions_mutated {
  key: ID!
  event: EventEnum
  data: directus_revisions
}

type directus_roles {
  id: ID!
  name: String!
  icon: String
  description: String
  parent(filter: directus_roles_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_roles
  children(filter: directus_roles_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [directus_roles]
  children_func: count_functions
  policies(filter: directus_access_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [directus_access]
  policies_func: count_functions
  users(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [directus_users]
  users_func: count_functions
}

type directus_roles_mutated {
  key: ID!
  event: EventEnum
  data: directus_roles
}

type directus_settings {
  id: ID!
  project_name: String
  project_url: String

  """$t:field_options.directus_settings.project_color_note"""
  project_color: String
  project_logo(filter: directus_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_files
  public_foreground(filter: directus_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_files
  public_background(filter: directus_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_files
  public_note: String
  auth_login_attempts: Int
  auth_password_policy: String
  storage_asset_transform: String
  storage_asset_presets: JSON
  storage_asset_presets_func: count_functions
  custom_css: String
  storage_default_folder(filter: directus_folders_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_folders
  basemaps: JSON
  basemaps_func: count_functions
  mapbox_key: String
  module_bar: JSON
  module_bar_func: count_functions
  project_descriptor: String
  default_language: String
  custom_aspect_ratios: JSON
  custom_aspect_ratios_func: count_functions
  public_favicon(filter: directus_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_files
  default_appearance: String
  default_theme_light: String
  theme_light_overrides: JSON
  theme_light_overrides_func: count_functions
  default_theme_dark: String
  theme_dark_overrides: JSON
  theme_dark_overrides_func: count_functions
  report_error_url: String
  report_bug_url: String
  report_feature_url: String

  """$t:fields.directus_settings.public_registration_note"""
  public_registration: Boolean!

  """$t:fields.directus_settings.public_registration_verify_email_note"""
  public_registration_verify_email: Boolean
  public_registration_role(filter: directus_roles_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_roles

  """$t:fields.directus_settings.public_registration_email_filter_note"""
  public_registration_email_filter: JSON
  public_registration_email_filter_func: count_functions
  visual_editor_urls: JSON
  visual_editor_urls_func: count_functions
  accepted_terms: Boolean
  project_id: ID

  """$t:fields.directus_settings.mcp_enabled_note"""
  mcp_enabled: Boolean!

  """$t:fields.directus_settings.mcp_allow_deletes_note"""
  mcp_allow_deletes: Boolean!

  """$t:fields.directus_settings.mcp_prompts_collection_note"""
  mcp_prompts_collection: String

  """$t:fields.directus_settings.mcp_system_prompt_enabled_note"""
  mcp_system_prompt_enabled: Boolean

  """$t:fields.directus_settings.mcp_system_prompt_note"""
  mcp_system_prompt: String
}

type directus_settings_mutated {
  key: ID!
  event: EventEnum
  data: directus_settings
}

type directus_shares {
  id: ID!
  name: String
  collection: String!
  item: String!
  role(filter: directus_roles_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_roles

  """$t:shared_leave_blank_for_passwordless_access"""
  password: Hash
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  date_created: Date
  date_created_func: datetime_functions

  """$t:shared_leave_blank_for_unlimited"""
  date_start: Date
  date_start_func: datetime_functions

  """$t:shared_leave_blank_for_unlimited"""
  date_end: Date
  date_end_func: datetime_functions
  times_used: Int

  """$t:shared_leave_blank_for_unlimited"""
  max_uses: Int
}

type directus_shares_mutated {
  key: ID!
  event: EventEnum
  data: directus_shares
}

type directus_sync_id_map {
  id: ID!
  table: String!
  sync_id: String!
  local_id: String!
  created_at: Date
  created_at_func: datetime_functions
}

type directus_sync_id_map_aggregated {
  group: JSON
  countAll: Int
  count: directus_sync_id_map_aggregated_count
  countDistinct: directus_sync_id_map_aggregated_count
  avg: directus_sync_id_map_aggregated_fields
  sum: directus_sync_id_map_aggregated_fields
  avgDistinct: directus_sync_id_map_aggregated_fields
  sumDistinct: directus_sync_id_map_aggregated_fields
  min: directus_sync_id_map_aggregated_fields
  max: directus_sync_id_map_aggregated_fields
}

type directus_sync_id_map_aggregated_count {
  id: Int
  table: Int
  sync_id: Int
  local_id: Int
  created_at: Int
}

type directus_sync_id_map_aggregated_fields {
  id: Float
}

type directus_sync_id_map_mutated {
  key: ID!
  event: EventEnum
  data: directus_sync_id_map
}

type directus_translations {
  id: ID!
  language: String!
  key: String!
  value: String!
}

type directus_translations_mutated {
  key: ID!
  event: EventEnum
  data: directus_translations
}

type directus_users {
  id: ID!
  first_name: String
  last_name: String
  email: String
  password: Hash
  location: String
  title: String
  description: String
  tags: JSON
  tags_func: count_functions
  avatar(filter: directus_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_files
  language: String
  tfa_secret: Hash
  status: String
  role(filter: directus_roles_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_roles
  token: Hash
  last_access: Date
  last_access_func: datetime_functions
  last_page: String
  provider: String
  external_identifier: String
  auth_data: JSON
  auth_data_func: count_functions
  email_notifications: Boolean
  appearance: String
  theme_dark: String
  theme_light: String
  theme_light_overrides: JSON
  theme_light_overrides_func: count_functions
  theme_dark_overrides: JSON
  theme_dark_overrides_func: count_functions
  text_direction: String
  policies(filter: directus_access_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [directus_access]
  policies_func: count_functions
}

type directus_users_mutated {
  key: ID!
  event: EventEnum
  data: directus_users
}

type directus_versions {
  id: ID!
  key: String!
  name: String
  collection: String!
  item: String!
  hash: String
  date_created: Date
  date_created_func: datetime_functions
  date_updated: Date
  date_updated_func: datetime_functions
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  delta: JSON
  delta_func: count_functions
}

type directus_versions_mutated {
  key: ID!
  event: EventEnum
  data: directus_versions
}

type directus_webhooks {
  id: ID!
  name: String!
  method: String
  url: String!
  status: String
  data: Boolean
  actions: [String]!
  collections: [String]!
  headers: JSON
  headers_func: count_functions
  was_active_before_deprecation: Boolean!
  migrated_flow(filter: directus_flows_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_flows
}

type directus_webhooks_mutated {
  key: ID!
  event: EventEnum
  data: directus_webhooks
}

type enterprise_tags {
  """ID autogenerado"""
  id: ID!

  """Nombre de la etiqueta"""
  name: String!
  color: String
  created_at: Date
  created_at_func: datetime_functions
}

type enterprise_tags_aggregated {
  group: JSON
  countAll: Int
  count: enterprise_tags_aggregated_count
  countDistinct: enterprise_tags_aggregated_count
  avg: enterprise_tags_aggregated_fields
  sum: enterprise_tags_aggregated_fields
  avgDistinct: enterprise_tags_aggregated_fields
  sumDistinct: enterprise_tags_aggregated_fields
  min: enterprise_tags_aggregated_fields
  max: enterprise_tags_aggregated_fields
}

type enterprise_tags_aggregated_count {
  """ID autogenerado"""
  id: Int

  """Nombre de la etiqueta"""
  name: Int
  color: Int
  created_at: Int
}

type enterprise_tags_aggregated_fields {
  """ID autogenerado"""
  id: Float
}

type enterprise_tags_mutated {
  key: ID!
  event: EventEnum
  data: enterprise_tags
}

type enterprises {
  """ID autogenerado"""
  id: ID!

  """Notas adicionales"""
  notes: String

  """Fecha de creación automática"""
  created_at: Date
  created_at_func: datetime_functions

  """Rango de empleados"""
  company_size: String

  """URL del perfil de LinkedIn"""
  linkedin: String

  """Nombre oficial de la empresa (obligatorio)"""
  organization_name: String!

  """Número de identificación fiscal"""
  fiscal_identification: String

  """Fecha de última modificación"""
  updated_at: Date
  updated_at_func: datetime_functions

  """Nombre comercial o marca"""
  commercial_name: String

  """Tipo de documento fiscal"""
  fiscal_identification_type: String

  """País de la empresa (ISO-3166)"""
  country: String

  """Dirección con autocompletado Mapbox"""
  normalized_address: String

  """URL del sitio web"""
  website: String

  """Prefijo telefónico (+E.164)"""
  phone_prefix: String

  """Número telefónico"""
  phone_number: String

  """Cómo se adquirió el lead"""
  acquisition_source: String

  """Responsable interno"""
  internal_owner: String
  industries(filter: enterprises_industries_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [enterprises_industries]
  industries_func: count_functions
  keywords(filter: enterprises_keywords_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [enterprises_keywords]
  technologies(filter: enterprises_technologies_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [enterprises_technologies]
  locations(filter: enterprises_locations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [enterprises_locations]
}

type enterprises_aggregated {
  group: JSON
  countAll: Int
  count: enterprises_aggregated_count
  countDistinct: enterprises_aggregated_count
  avg: enterprises_aggregated_fields
  sum: enterprises_aggregated_fields
  avgDistinct: enterprises_aggregated_fields
  sumDistinct: enterprises_aggregated_fields
  min: enterprises_aggregated_fields
  max: enterprises_aggregated_fields
}

type enterprises_aggregated_count {
  """ID autogenerado"""
  id: Int

  """Notas adicionales"""
  notes: Int

  """Fecha de creación automática"""
  created_at: Int

  """Rango de empleados"""
  company_size: Int

  """URL del perfil de LinkedIn"""
  linkedin: Int

  """Nombre oficial de la empresa (obligatorio)"""
  organization_name: Int

  """Número de identificación fiscal"""
  fiscal_identification: Int

  """Fecha de última modificación"""
  updated_at: Int

  """Nombre comercial o marca"""
  commercial_name: Int

  """Tipo de documento fiscal"""
  fiscal_identification_type: Int

  """País de la empresa (ISO-3166)"""
  country: Int

  """Dirección con autocompletado Mapbox"""
  normalized_address: Int

  """URL del sitio web"""
  website: Int

  """Prefijo telefónico (+E.164)"""
  phone_prefix: Int

  """Número telefónico"""
  phone_number: Int

  """Cómo se adquirió el lead"""
  acquisition_source: Int

  """Responsable interno"""
  internal_owner: Int

  """Sectores o industrias (selección múltiple)"""
  industries: Int
}

type enterprises_aggregated_fields {
  """ID autogenerado"""
  id: Float
}

type enterprises_industries {
  id: ID!
  enterprises_id(filter: enterprises_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): enterprises
  industries_id(filter: industries_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): industries
}

type enterprises_industries_aggregated {
  group: JSON
  countAll: Int
  count: enterprises_industries_aggregated_count
  countDistinct: enterprises_industries_aggregated_count
  avg: enterprises_industries_aggregated_fields
  sum: enterprises_industries_aggregated_fields
  avgDistinct: enterprises_industries_aggregated_fields
  sumDistinct: enterprises_industries_aggregated_fields
  min: enterprises_industries_aggregated_fields
  max: enterprises_industries_aggregated_fields
}

type enterprises_industries_aggregated_count {
  id: Int
  enterprises_id: Int
  industries_id: Int
}

type enterprises_industries_aggregated_fields {
  id: Float
  enterprises_id: Float
  industries_id: Float
}

type enterprises_industries_mutated {
  key: ID!
  event: EventEnum
  data: enterprises_industries
}

type enterprises_keywords {
  id: ID!
  enterprises_id(filter: enterprises_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): enterprises
  keywords_id(filter: keywords_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): keywords
}

type enterprises_keywords_aggregated {
  group: JSON
  countAll: Int
  count: enterprises_keywords_aggregated_count
  countDistinct: enterprises_keywords_aggregated_count
  avg: enterprises_keywords_aggregated_fields
  sum: enterprises_keywords_aggregated_fields
  avgDistinct: enterprises_keywords_aggregated_fields
  sumDistinct: enterprises_keywords_aggregated_fields
  min: enterprises_keywords_aggregated_fields
  max: enterprises_keywords_aggregated_fields
}

type enterprises_keywords_aggregated_count {
  id: Int
  enterprises_id: Int
  keywords_id: Int
}

type enterprises_keywords_aggregated_fields {
  id: Float
  enterprises_id: Float
  keywords_id: Float
}

type enterprises_keywords_mutated {
  key: ID!
  event: EventEnum
  data: enterprises_keywords
}

type enterprises_locations {
  id: ID!
  enterprises_id(filter: enterprises_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): enterprises
  locations_id(filter: locations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): locations
}

type enterprises_locations_aggregated {
  group: JSON
  countAll: Int
  count: enterprises_locations_aggregated_count
  countDistinct: enterprises_locations_aggregated_count
  avg: enterprises_locations_aggregated_fields
  sum: enterprises_locations_aggregated_fields
  avgDistinct: enterprises_locations_aggregated_fields
  sumDistinct: enterprises_locations_aggregated_fields
  min: enterprises_locations_aggregated_fields
  max: enterprises_locations_aggregated_fields
}

type enterprises_locations_aggregated_count {
  id: Int
  enterprises_id: Int
  locations_id: Int
}

type enterprises_locations_aggregated_fields {
  id: Float
  enterprises_id: Float
  locations_id: Float
}

type enterprises_locations_mutated {
  key: ID!
  event: EventEnum
  data: enterprises_locations
}

type enterprises_mutated {
  key: ID!
  event: EventEnum
  data: enterprises
}

type enterprises_tags {
  id: ID!
  enterprise_id(filter: enterprises_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): enterprises
  tag_id(filter: enterprise_tags_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): enterprise_tags
  created_at: Date
  created_at_func: datetime_functions
  enterprises_id(filter: enterprises_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): enterprises
}

type enterprises_tags_aggregated {
  group: JSON
  countAll: Int
  count: enterprises_tags_aggregated_count
  countDistinct: enterprises_tags_aggregated_count
  avg: enterprises_tags_aggregated_fields
  sum: enterprises_tags_aggregated_fields
  avgDistinct: enterprises_tags_aggregated_fields
  sumDistinct: enterprises_tags_aggregated_fields
  min: enterprises_tags_aggregated_fields
  max: enterprises_tags_aggregated_fields
}

type enterprises_tags_aggregated_count {
  id: Int
  enterprise_id: Int
  tag_id: Int
  created_at: Int
}

type enterprises_tags_aggregated_fields {
  id: Float
  enterprise_id: Float
  tag_id: Float
}

type enterprises_tags_mutated {
  key: ID!
  event: EventEnum
  data: enterprises_tags
}

type enterprises_technologies {
  id: ID!
  enterprises_id(filter: enterprises_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): enterprises
  technologies_id(filter: technologies_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): technologies
}

type enterprises_technologies_aggregated {
  group: JSON
  countAll: Int
  count: enterprises_technologies_aggregated_count
  countDistinct: enterprises_technologies_aggregated_count
  avg: enterprises_technologies_aggregated_fields
  sum: enterprises_technologies_aggregated_fields
  avgDistinct: enterprises_technologies_aggregated_fields
  sumDistinct: enterprises_technologies_aggregated_fields
  min: enterprises_technologies_aggregated_fields
  max: enterprises_technologies_aggregated_fields
}

type enterprises_technologies_aggregated_count {
  id: Int
  enterprises_id: Int
  technologies_id: Int
}

type enterprises_technologies_aggregated_fields {
  id: Float
  enterprises_id: Float
  technologies_id: Float
}

type enterprises_technologies_mutated {
  key: ID!
  event: EventEnum
  data: enterprises_technologies
}

type industries {
  id: ID!

  """Fecha de creación"""
  created_at: Date
  created_at_func: datetime_functions

  """Nombre de la industria"""
  name: String!

  """Fecha de última actualización"""
  updated_at: Date
  updated_at_func: datetime_functions
}

type industries_aggregated {
  group: JSON
  countAll: Int
  count: industries_aggregated_count
  countDistinct: industries_aggregated_count
  avg: industries_aggregated_fields
  sum: industries_aggregated_fields
  avgDistinct: industries_aggregated_fields
  sumDistinct: industries_aggregated_fields
  min: industries_aggregated_fields
  max: industries_aggregated_fields
}

type industries_aggregated_count {
  id: Int

  """Fecha de creación"""
  created_at: Int

  """Nombre de la industria"""
  name: Int

  """Fecha de última actualización"""
  updated_at: Int
}

type industries_aggregated_fields {
  id: Float
}

type industries_mutated {
  key: ID!
  event: EventEnum
  data: industries
}

type keywords {
  id: ID!

  """Fecha de creación"""
  created_at: Date
  created_at_func: datetime_functions

  """Nombre de la palabra clave"""
  name: String!

  """Fecha de última actualización"""
  updated_at: Date
  updated_at_func: datetime_functions
}

type keywords_aggregated {
  group: JSON
  countAll: Int
  count: keywords_aggregated_count
  countDistinct: keywords_aggregated_count
  avg: keywords_aggregated_fields
  sum: keywords_aggregated_fields
  avgDistinct: keywords_aggregated_fields
  sumDistinct: keywords_aggregated_fields
  min: keywords_aggregated_fields
  max: keywords_aggregated_fields
}

type keywords_aggregated_count {
  id: Int

  """Fecha de creación"""
  created_at: Int

  """Nombre de la palabra clave"""
  name: Int

  """Fecha de última actualización"""
  updated_at: Int
}

type keywords_aggregated_fields {
  id: Float
}

type keywords_mutated {
  key: ID!
  event: EventEnum
  data: keywords
}

type locations {
  id: ID!

  """Ciudad"""
  city: String!

  """País"""
  country: String!

  """Fecha de creación"""
  created_at: Date
  created_at_func: datetime_functions

  """Provincia/Estado"""
  province: String!

  """Fecha de última actualización"""
  updated_at: Date
  updated_at_func: datetime_functions
}

type locations_aggregated {
  group: JSON
  countAll: Int
  count: locations_aggregated_count
  countDistinct: locations_aggregated_count
  avg: locations_aggregated_fields
  sum: locations_aggregated_fields
  avgDistinct: locations_aggregated_fields
  sumDistinct: locations_aggregated_fields
  min: locations_aggregated_fields
  max: locations_aggregated_fields
}

type locations_aggregated_count {
  id: Int

  """Ciudad"""
  city: Int

  """País"""
  country: Int

  """Fecha de creación"""
  created_at: Int

  """Provincia/Estado"""
  province: Int

  """Fecha de última actualización"""
  updated_at: Int
}

type locations_aggregated_fields {
  id: Float
}

type locations_mutated {
  key: ID!
  event: EventEnum
  data: locations
}

type people {
  """ID autogenerado"""
  id: ID!

  """Notas y comentarios adicionales"""
  notes: String

  """Fecha de creación automática"""
  created_at: Date
  created_at_func: datetime_functions

  """Email principal de contacto"""
  primary_email: String

  """URL del perfil de LinkedIn"""
  linkedin: String

  """Nombre completo de la persona (obligatorio)"""
  full_name: String!

  """Fecha de última actualización"""
  updated_at: Date
  updated_at_func: datetime_functions

  """Cargo o puesto de trabajo"""
  position_title: String

  """Área o departamento"""
  department: String

  """Prefijo telefónico (+E.164)"""
  phone_prefix: String

  """Número telefónico sin prefijo"""
  phone_number: String
  enterprise_relation_id(filter: enterprises_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): enterprises

  """Nivel de decisión en la organización"""
  decision_level: String

  """Cómo se adquirió el contacto"""
  acquisition_source: String

  """Responsable interno del contacto"""
  internal_owner: String

  """Consentimiento para comunicaciones"""
  communication_consent: Boolean
  tags(filter: people_tags_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [people_tags]
  tags_func: count_functions
  keywords(filter: people_keywords_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [people_keywords]
  technologies(filter: people_technologies_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [people_technologies]
  location_id(filter: locations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): locations
}

type people_aggregated {
  group: JSON
  countAll: Int
  count: people_aggregated_count
  countDistinct: people_aggregated_count
  avg: people_aggregated_fields
  sum: people_aggregated_fields
  avgDistinct: people_aggregated_fields
  sumDistinct: people_aggregated_fields
  min: people_aggregated_fields
  max: people_aggregated_fields
}

type people_aggregated_count {
  """ID autogenerado"""
  id: Int

  """Notas y comentarios adicionales"""
  notes: Int

  """Fecha de creación automática"""
  created_at: Int

  """Email principal de contacto"""
  primary_email: Int

  """URL del perfil de LinkedIn"""
  linkedin: Int

  """Nombre completo de la persona (obligatorio)"""
  full_name: Int

  """Fecha de última actualización"""
  updated_at: Int

  """Cargo o puesto de trabajo"""
  position_title: Int

  """Área o departamento"""
  department: Int

  """Prefijo telefónico (+E.164)"""
  phone_prefix: Int

  """Número telefónico sin prefijo"""
  phone_number: Int

  """Empresa u organización relacionada"""
  enterprise_relation_id: Int

  """Nivel de decisión en la organización"""
  decision_level: Int

  """Cómo se adquirió el contacto"""
  acquisition_source: Int

  """Responsable interno del contacto"""
  internal_owner: Int

  """Consentimiento para comunicaciones"""
  communication_consent: Int

  """Etiquetas dinámicas (chips)"""
  tags: Int
}

type people_aggregated_fields {
  """ID autogenerado"""
  id: Float

  """Empresa u organización relacionada"""
  enterprise_relation_id: Float
}

type people_keywords {
  id: ID!
  keywords_id(filter: keywords_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): keywords
  people_id(filter: people_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): people
}

type people_keywords_aggregated {
  group: JSON
  countAll: Int
  count: people_keywords_aggregated_count
  countDistinct: people_keywords_aggregated_count
  avg: people_keywords_aggregated_fields
  sum: people_keywords_aggregated_fields
  avgDistinct: people_keywords_aggregated_fields
  sumDistinct: people_keywords_aggregated_fields
  min: people_keywords_aggregated_fields
  max: people_keywords_aggregated_fields
}

type people_keywords_aggregated_count {
  id: Int
  keywords_id: Int
  people_id: Int
}

type people_keywords_aggregated_fields {
  id: Float
  keywords_id: Float
  people_id: Float
}

type people_keywords_mutated {
  key: ID!
  event: EventEnum
  data: people_keywords
}

type people_mutated {
  key: ID!
  event: EventEnum
  data: people
}

type people_tags {
  id: ID!
  person_id(filter: people_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): people
  tag_id(filter: enterprise_tags_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): enterprise_tags
  created_at: Date
  created_at_func: datetime_functions
}

type people_tags_aggregated {
  group: JSON
  countAll: Int
  count: people_tags_aggregated_count
  countDistinct: people_tags_aggregated_count
  avg: people_tags_aggregated_fields
  sum: people_tags_aggregated_fields
  avgDistinct: people_tags_aggregated_fields
  sumDistinct: people_tags_aggregated_fields
  min: people_tags_aggregated_fields
  max: people_tags_aggregated_fields
}

type people_tags_aggregated_count {
  id: Int
  person_id: Int
  tag_id: Int
  created_at: Int
}

type people_tags_aggregated_fields {
  id: Float
  person_id: Float
  tag_id: Float
}

type people_tags_mutated {
  key: ID!
  event: EventEnum
  data: people_tags
}

type people_technologies {
  id: ID!
  people_id(filter: people_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): people
  technologies_id(filter: technologies_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): technologies
}

type people_technologies_aggregated {
  group: JSON
  countAll: Int
  count: people_technologies_aggregated_count
  countDistinct: people_technologies_aggregated_count
  avg: people_technologies_aggregated_fields
  sum: people_technologies_aggregated_fields
  avgDistinct: people_technologies_aggregated_fields
  sumDistinct: people_technologies_aggregated_fields
  min: people_technologies_aggregated_fields
  max: people_technologies_aggregated_fields
}

type people_technologies_aggregated_count {
  id: Int
  people_id: Int
  technologies_id: Int
}

type people_technologies_aggregated_fields {
  id: Float
  people_id: Float
  technologies_id: Float
}

type people_technologies_mutated {
  key: ID!
  event: EventEnum
  data: people_technologies
}

type person_employment_history {
  id: ID!
  created_at: Date
  created_at_func: datetime_functions
  end_date: Date
  end_date_func: date_functions

  """Indica si es el trabajo actual"""
  is_current: Boolean
  start_date: Date
  start_date_func: date_functions
  updated_at: Date
  updated_at_func: datetime_functions
  person_id(filter: people_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): people
  enterprise_id(filter: enterprises_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): enterprises
  position_id(filter: positions_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): positions
}

type person_employment_history_aggregated {
  group: JSON
  countAll: Int
  count: person_employment_history_aggregated_count
  countDistinct: person_employment_history_aggregated_count
  avg: person_employment_history_aggregated_fields
  sum: person_employment_history_aggregated_fields
  avgDistinct: person_employment_history_aggregated_fields
  sumDistinct: person_employment_history_aggregated_fields
  min: person_employment_history_aggregated_fields
  max: person_employment_history_aggregated_fields
}

type person_employment_history_aggregated_count {
  id: Int
  created_at: Int
  end_date: Int

  """Indica si es el trabajo actual"""
  is_current: Int
  start_date: Int
  updated_at: Int
  person_id: Int
  enterprise_id: Int
  position_id: Int
}

type person_employment_history_aggregated_fields {
  id: Float
  person_id: Float
  enterprise_id: Float
  position_id: Float
}

type person_employment_history_mutated {
  key: ID!
  event: EventEnum
  data: person_employment_history
}

type positions {
  id: ID!

  """Fecha de creación"""
  created_at: Date
  created_at_func: datetime_functions

  """Nombre del cargo/posición"""
  name: String!

  """Fecha de última actualización"""
  updated_at: Date
  updated_at_func: datetime_functions
}

type positions_aggregated {
  group: JSON
  countAll: Int
  count: positions_aggregated_count
  countDistinct: positions_aggregated_count
  avg: positions_aggregated_fields
  sum: positions_aggregated_fields
  avgDistinct: positions_aggregated_fields
  sumDistinct: positions_aggregated_fields
  min: positions_aggregated_fields
  max: positions_aggregated_fields
}

type positions_aggregated_count {
  id: Int

  """Fecha de creación"""
  created_at: Int

  """Nombre del cargo/posición"""
  name: Int

  """Fecha de última actualización"""
  updated_at: Int
}

type positions_aggregated_fields {
  id: Float
}

type positions_mutated {
  key: ID!
  event: EventEnum
  data: positions
}

type segments {
  id: ID!
  created_at: Date
  created_at_func: datetime_functions
  name: String
  total: Int
  updated_at: Date
  updated_at_func: datetime_functions
  industry_id(filter: industries_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): industries
}

type segments_aggregated {
  group: JSON
  countAll: Int
  count: segments_aggregated_count
  countDistinct: segments_aggregated_count
  avg: segments_aggregated_fields
  sum: segments_aggregated_fields
  avgDistinct: segments_aggregated_fields
  sumDistinct: segments_aggregated_fields
  min: segments_aggregated_fields
  max: segments_aggregated_fields
}

type segments_aggregated_count {
  id: Int
  created_at: Int
  name: Int
  total: Int
  updated_at: Int
  industry_id: Int
}

type segments_aggregated_fields {
  id: Float
  total: Float
  industry_id: Float
}

type segments_mutated {
  key: ID!
  event: EventEnum
  data: segments
}

type technologies {
  id: ID!

  """Fecha de creación"""
  created_at: Date
  created_at_func: datetime_functions

  """Nombre de la tecnología"""
  name: String!

  """Fecha de última actualización"""
  updated_at: Date
  updated_at_func: datetime_functions
}

type technologies_aggregated {
  group: JSON
  countAll: Int
  count: technologies_aggregated_count
  countDistinct: technologies_aggregated_count
  avg: technologies_aggregated_fields
  sum: technologies_aggregated_fields
  avgDistinct: technologies_aggregated_fields
  sumDistinct: technologies_aggregated_fields
  min: technologies_aggregated_fields
  max: technologies_aggregated_fields
}

type technologies_aggregated_count {
  id: Int

  """Fecha de creación"""
  created_at: Int

  """Nombre de la tecnología"""
  name: Int

  """Fecha de última actualización"""
  updated_at: Int
}

type technologies_aggregated_fields {
  id: Float
}

type technologies_mutated {
  key: ID!
  event: EventEnum
  data: technologies
}

""""""
type version_directus_sync_id_map {
  id: ID
  table: String
  sync_id: String
  local_id: String
  created_at: Date
}

""""""
type version_enterprise_tags {
  """ID autogenerado"""
  id: ID

  """Nombre de la etiqueta"""
  name: String
  color: String
  created_at: Date
}

""""""
type version_enterprises {
  """ID autogenerado"""
  id: ID

  """Notas adicionales"""
  notes: String

  """Fecha de creación automática"""
  created_at: Date

  """Rango de empleados"""
  company_size: String

  """URL del perfil de LinkedIn"""
  linkedin: String

  """Nombre oficial de la empresa (obligatorio)"""
  organization_name: String

  """Número de identificación fiscal"""
  fiscal_identification: String

  """Fecha de última modificación"""
  updated_at: Date

  """Nombre comercial o marca"""
  commercial_name: String

  """Tipo de documento fiscal"""
  fiscal_identification_type: String

  """País de la empresa (ISO-3166)"""
  country: String

  """Dirección con autocompletado Mapbox"""
  normalized_address: String

  """URL del sitio web"""
  website: String

  """Prefijo telefónico (+E.164)"""
  phone_prefix: String

  """Número telefónico"""
  phone_number: String

  """Cómo se adquirió el lead"""
  acquisition_source: String

  """Responsable interno"""
  internal_owner: String
  industries: JSON
  keywords: JSON
  technologies: JSON
  locations: JSON
}

""""""
type version_enterprises_industries {
  id: ID
  enterprises_id: JSON
  industries_id: JSON
}

""""""
type version_enterprises_keywords {
  id: ID
  enterprises_id: JSON
  keywords_id: JSON
}

""""""
type version_enterprises_locations {
  id: ID
  enterprises_id: JSON
  locations_id: JSON
}

""""""
type version_enterprises_tags {
  id: ID
  enterprise_id: JSON
  tag_id: JSON
  created_at: Date
  enterprises_id: JSON
}

""""""
type version_enterprises_technologies {
  id: ID
  enterprises_id: JSON
  technologies_id: JSON
}

""""""
type version_industries {
  id: ID

  """Fecha de creación"""
  created_at: Date

  """Nombre de la industria"""
  name: String

  """Fecha de última actualización"""
  updated_at: Date
}

""""""
type version_keywords {
  id: ID

  """Fecha de creación"""
  created_at: Date

  """Nombre de la palabra clave"""
  name: String

  """Fecha de última actualización"""
  updated_at: Date
}

""""""
type version_locations {
  id: ID

  """Ciudad"""
  city: String

  """País"""
  country: String

  """Fecha de creación"""
  created_at: Date

  """Provincia/Estado"""
  province: String

  """Fecha de última actualización"""
  updated_at: Date
}

""""""
type version_people {
  """ID autogenerado"""
  id: ID

  """Notas y comentarios adicionales"""
  notes: String

  """Fecha de creación automática"""
  created_at: Date

  """Email principal de contacto"""
  primary_email: String

  """URL del perfil de LinkedIn"""
  linkedin: String

  """Nombre completo de la persona (obligatorio)"""
  full_name: String

  """Fecha de última actualización"""
  updated_at: Date

  """Cargo o puesto de trabajo"""
  position_title: String

  """Área o departamento"""
  department: String

  """Prefijo telefónico (+E.164)"""
  phone_prefix: String

  """Número telefónico sin prefijo"""
  phone_number: String
  enterprise_relation_id: JSON

  """Nivel de decisión en la organización"""
  decision_level: String

  """Cómo se adquirió el contacto"""
  acquisition_source: String

  """Responsable interno del contacto"""
  internal_owner: String

  """Consentimiento para comunicaciones"""
  communication_consent: Boolean
  tags: JSON
  keywords: JSON
  technologies: JSON
  location_id: JSON
}

""""""
type version_people_keywords {
  id: ID
  keywords_id: JSON
  people_id: JSON
}

""""""
type version_people_tags {
  id: ID
  person_id: JSON
  tag_id: JSON
  created_at: Date
}

""""""
type version_people_technologies {
  id: ID
  people_id: JSON
  technologies_id: JSON
}

""""""
type version_person_employment_history {
  id: ID
  created_at: Date
  end_date: Date

  """Indica si es el trabajo actual"""
  is_current: Boolean
  start_date: Date
  updated_at: Date
  person_id: JSON
  enterprise_id: JSON
  position_id: JSON
}

""""""
type version_positions {
  id: ID

  """Fecha de creación"""
  created_at: Date

  """Nombre del cargo/posición"""
  name: String

  """Fecha de última actualización"""
  updated_at: Date
}

""""""
type version_segments {
  id: ID
  created_at: Date
  name: String
  total: Int
  updated_at: Date
  industry_id: JSON
}

""""""
type version_technologies {
  id: ID

  """Fecha de creación"""
  created_at: Date

  """Nombre de la tecnología"""
  name: String

  """Fecha de última actualización"""
  updated_at: Date
}

input big_int_filter_operators {
  _eq: GraphQLBigInt
  _neq: GraphQLBigInt
  _in: [GraphQLBigInt]
  _nin: [GraphQLBigInt]
  _gt: GraphQLBigInt
  _gte: GraphQLBigInt
  _lt: GraphQLBigInt
  _lte: GraphQLBigInt
  _null: Boolean
  _nnull: Boolean
  _between: [GraphQLBigInt]
  _nbetween: [GraphQLBigInt]
}

input boolean_filter_operators {
  _eq: Boolean
  _neq: Boolean
  _null: Boolean
  _nnull: Boolean
}

input count_function_filter_operators {
  count: number_filter_operators
}

input create_directus_sync_id_map_input {
  id: ID
  table: String!
  sync_id: String!
  local_id: String!
  created_at: Date
}

input create_enterprise_tags_input {
  """ID autogenerado"""
  id: ID

  """Nombre de la etiqueta"""
  name: String!
  color: String
  created_at: Date
}

input create_enterprises_industries_input {
  id: ID
  enterprises_id: create_enterprises_input
  industries_id: create_industries_input
}

input create_enterprises_input {
  """ID autogenerado"""
  id: ID

  """Notas adicionales"""
  notes: String

  """Fecha de creación automática"""
  created_at: Date

  """Rango de empleados"""
  company_size: String

  """URL del perfil de LinkedIn"""
  linkedin: String

  """Nombre oficial de la empresa (obligatorio)"""
  organization_name: String!

  """Número de identificación fiscal"""
  fiscal_identification: String

  """Fecha de última modificación"""
  updated_at: Date

  """Nombre comercial o marca"""
  commercial_name: String

  """Tipo de documento fiscal"""
  fiscal_identification_type: String

  """País de la empresa (ISO-3166)"""
  country: String

  """Dirección con autocompletado Mapbox"""
  normalized_address: String

  """URL del sitio web"""
  website: String

  """Prefijo telefónico (+E.164)"""
  phone_prefix: String

  """Número telefónico"""
  phone_number: String

  """Cómo se adquirió el lead"""
  acquisition_source: String

  """Responsable interno"""
  internal_owner: String
  industries: [create_enterprises_industries_input]
  keywords: [create_enterprises_keywords_input]
  technologies: [create_enterprises_technologies_input]
  locations: [create_enterprises_locations_input]
}

input create_enterprises_keywords_input {
  id: ID
  enterprises_id: create_enterprises_input
  keywords_id: create_keywords_input
}

input create_enterprises_locations_input {
  id: ID
  enterprises_id: create_enterprises_input
  locations_id: create_locations_input
}

input create_enterprises_tags_input {
  id: ID
  enterprise_id: create_enterprises_input
  tag_id: create_enterprise_tags_input
  created_at: Date
  enterprises_id: create_enterprises_input
}

input create_enterprises_technologies_input {
  id: ID
  enterprises_id: create_enterprises_input
  technologies_id: create_technologies_input
}

input create_industries_input {
  id: ID

  """Fecha de creación"""
  created_at: Date

  """Nombre de la industria"""
  name: String!

  """Fecha de última actualización"""
  updated_at: Date
}

input create_keywords_input {
  id: ID

  """Fecha de creación"""
  created_at: Date

  """Nombre de la palabra clave"""
  name: String!

  """Fecha de última actualización"""
  updated_at: Date
}

input create_locations_input {
  id: ID

  """Ciudad"""
  city: String!

  """País"""
  country: String!

  """Fecha de creación"""
  created_at: Date

  """Provincia/Estado"""
  province: String!

  """Fecha de última actualización"""
  updated_at: Date
}

input create_people_input {
  """ID autogenerado"""
  id: ID

  """Notas y comentarios adicionales"""
  notes: String

  """Fecha de creación automática"""
  created_at: Date

  """Email principal de contacto"""
  primary_email: String

  """URL del perfil de LinkedIn"""
  linkedin: String

  """Nombre completo de la persona (obligatorio)"""
  full_name: String!

  """Fecha de última actualización"""
  updated_at: Date

  """Cargo o puesto de trabajo"""
  position_title: String

  """Área o departamento"""
  department: String

  """Prefijo telefónico (+E.164)"""
  phone_prefix: String

  """Número telefónico sin prefijo"""
  phone_number: String
  enterprise_relation_id: create_enterprises_input

  """Nivel de decisión en la organización"""
  decision_level: String

  """Cómo se adquirió el contacto"""
  acquisition_source: String

  """Responsable interno del contacto"""
  internal_owner: String

  """Consentimiento para comunicaciones"""
  communication_consent: Boolean
  tags: [create_people_tags_input]
  keywords: [create_people_keywords_input]
  technologies: [create_people_technologies_input]
  location_id: create_locations_input
}

input create_people_keywords_input {
  id: ID
  keywords_id: create_keywords_input
  people_id: create_people_input
}

input create_people_tags_input {
  id: ID
  person_id: create_people_input
  tag_id: create_enterprise_tags_input
  created_at: Date
}

input create_people_technologies_input {
  id: ID
  people_id: create_people_input
  technologies_id: create_technologies_input
}

input create_person_employment_history_input {
  id: ID
  created_at: Date
  end_date: Date

  """Indica si es el trabajo actual"""
  is_current: Boolean
  start_date: Date
  updated_at: Date
  person_id: create_people_input
  enterprise_id: create_enterprises_input
  position_id: create_positions_input
}

input create_positions_input {
  id: ID

  """Fecha de creación"""
  created_at: Date

  """Nombre del cargo/posición"""
  name: String!

  """Fecha de última actualización"""
  updated_at: Date
}

input create_segments_input {
  id: ID
  created_at: Date
  name: String
  total: Int
  updated_at: Date
  industry_id: create_industries_input
}

input create_technologies_input {
  id: ID

  """Fecha de creación"""
  created_at: Date

  """Nombre de la tecnología"""
  name: String!

  """Fecha de última actualización"""
  updated_at: Date
}

input date_filter_operators {
  _eq: String
  _neq: String
  _gt: String
  _gte: String
  _lt: String
  _lte: String
  _null: Boolean
  _nnull: Boolean
  _in: [String]
  _nin: [String]
  _between: [GraphQLStringOrFloat]
  _nbetween: [GraphQLStringOrFloat]
}

input date_function_filter_operators {
  year: number_filter_operators
  month: number_filter_operators
  week: number_filter_operators
  day: number_filter_operators
  weekday: number_filter_operators
}

input datetime_function_filter_operators {
  year: number_filter_operators
  month: number_filter_operators
  week: number_filter_operators
  day: number_filter_operators
  weekday: number_filter_operators
  hour: number_filter_operators
  minute: number_filter_operators
  second: number_filter_operators
}

input directus_access_filter {
  id: id_filter_operators
  role: directus_roles_filter
  user: directus_users_filter
  policy: directus_policies_filter
  sort: number_filter_operators
  _and: [directus_access_filter]
  _or: [directus_access_filter]
}

""""""
input directus_access_quantifier_filter {
  id: id_filter_operators
  role: directus_roles_filter
  user: directus_users_filter
  policy: directus_policies_filter
  sort: number_filter_operators
  _and: [directus_access_filter]
  _or: [directus_access_filter]
  _some: directus_access_filter
  _none: directus_access_filter
}

input directus_activity_filter {
  id: number_filter_operators
  action: string_filter_operators
  user: directus_users_filter
  timestamp: date_filter_operators
  timestamp_func: datetime_function_filter_operators
  ip: string_filter_operators
  user_agent: string_filter_operators
  collection: string_filter_operators
  item: string_filter_operators
  origin: string_filter_operators
  revisions: directus_revisions_quantifier_filter
  revisions_func: count_function_filter_operators
  _and: [directus_activity_filter]
  _or: [directus_activity_filter]
}

input directus_dashboards_filter {
  id: id_filter_operators
  name: string_filter_operators
  icon: string_filter_operators
  note: string_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  user_created: directus_users_filter
  color: string_filter_operators
  panels: directus_panels_quantifier_filter
  panels_func: count_function_filter_operators
  _and: [directus_dashboards_filter]
  _or: [directus_dashboards_filter]
}

input directus_files_filter {
  id: id_filter_operators
  storage: string_filter_operators
  filename_disk: string_filter_operators
  filename_download: string_filter_operators
  title: string_filter_operators
  type: string_filter_operators
  folder: directus_folders_filter
  uploaded_by: directus_users_filter
  created_on: date_filter_operators
  created_on_func: datetime_function_filter_operators
  modified_by: directus_users_filter
  modified_on: date_filter_operators
  modified_on_func: datetime_function_filter_operators
  charset: string_filter_operators
  filesize: big_int_filter_operators
  width: number_filter_operators
  height: number_filter_operators
  duration: number_filter_operators
  embed: string_filter_operators
  description: string_filter_operators
  location: string_filter_operators
  tags: string_filter_operators
  tags_func: count_function_filter_operators
  metadata: string_filter_operators
  metadata_func: count_function_filter_operators
  focal_point_x: number_filter_operators
  focal_point_y: number_filter_operators
  tus_id: string_filter_operators
  tus_data: string_filter_operators
  tus_data_func: count_function_filter_operators
  uploaded_on: date_filter_operators
  uploaded_on_func: datetime_function_filter_operators
  _and: [directus_files_filter]
  _or: [directus_files_filter]
}

input directus_flows_filter {
  id: id_filter_operators
  name: string_filter_operators
  icon: string_filter_operators
  color: string_filter_operators
  description: string_filter_operators
  status: string_filter_operators
  trigger: string_filter_operators
  accountability: string_filter_operators
  options: string_filter_operators
  options_func: count_function_filter_operators
  operation: directus_operations_filter
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  user_created: directus_users_filter
  operations: directus_operations_quantifier_filter
  operations_func: count_function_filter_operators
  _and: [directus_flows_filter]
  _or: [directus_flows_filter]
}

input directus_folders_filter {
  id: id_filter_operators
  name: string_filter_operators
  parent: directus_folders_filter
  _and: [directus_folders_filter]
  _or: [directus_folders_filter]
}

input directus_operations_filter {
  id: id_filter_operators
  name: string_filter_operators
  key: string_filter_operators
  type: string_filter_operators
  position_x: number_filter_operators
  position_y: number_filter_operators
  options: string_filter_operators
  options_func: count_function_filter_operators
  resolve: directus_operations_filter
  reject: directus_operations_filter
  flow: directus_flows_filter
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  user_created: directus_users_filter
  _and: [directus_operations_filter]
  _or: [directus_operations_filter]
}

""""""
input directus_operations_quantifier_filter {
  id: id_filter_operators
  name: string_filter_operators
  key: string_filter_operators
  type: string_filter_operators
  position_x: number_filter_operators
  position_y: number_filter_operators
  options: string_filter_operators
  options_func: count_function_filter_operators
  resolve: directus_operations_filter
  reject: directus_operations_filter
  flow: directus_flows_filter
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  user_created: directus_users_filter
  _and: [directus_operations_filter]
  _or: [directus_operations_filter]
  _some: directus_operations_filter
  _none: directus_operations_filter
}

input directus_panels_filter {
  id: id_filter_operators
  dashboard: directus_dashboards_filter
  name: string_filter_operators
  icon: string_filter_operators
  color: string_filter_operators
  show_header: boolean_filter_operators
  note: string_filter_operators
  type: string_filter_operators
  position_x: number_filter_operators
  position_y: number_filter_operators
  width: number_filter_operators
  height: number_filter_operators
  options: string_filter_operators
  options_func: count_function_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  user_created: directus_users_filter
  _and: [directus_panels_filter]
  _or: [directus_panels_filter]
}

""""""
input directus_panels_quantifier_filter {
  id: id_filter_operators
  dashboard: directus_dashboards_filter
  name: string_filter_operators
  icon: string_filter_operators
  color: string_filter_operators
  show_header: boolean_filter_operators
  note: string_filter_operators
  type: string_filter_operators
  position_x: number_filter_operators
  position_y: number_filter_operators
  width: number_filter_operators
  height: number_filter_operators
  options: string_filter_operators
  options_func: count_function_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  user_created: directus_users_filter
  _and: [directus_panels_filter]
  _or: [directus_panels_filter]
  _some: directus_panels_filter
  _none: directus_panels_filter
}

input directus_permissions_filter {
  id: number_filter_operators
  collection: string_filter_operators
  action: string_filter_operators
  permissions: string_filter_operators
  permissions_func: count_function_filter_operators
  validation: string_filter_operators
  validation_func: count_function_filter_operators
  presets: string_filter_operators
  presets_func: count_function_filter_operators
  fields: string_filter_operators
  policy: directus_policies_filter
  _and: [directus_permissions_filter]
  _or: [directus_permissions_filter]
}

""""""
input directus_permissions_quantifier_filter {
  id: number_filter_operators
  collection: string_filter_operators
  action: string_filter_operators
  permissions: string_filter_operators
  permissions_func: count_function_filter_operators
  validation: string_filter_operators
  validation_func: count_function_filter_operators
  presets: string_filter_operators
  presets_func: count_function_filter_operators
  fields: string_filter_operators
  policy: directus_policies_filter
  _and: [directus_permissions_filter]
  _or: [directus_permissions_filter]
  _some: directus_permissions_filter
  _none: directus_permissions_filter
}

input directus_policies_filter {
  id: id_filter_operators
  name: string_filter_operators
  icon: string_filter_operators
  description: string_filter_operators
  ip_access: string_filter_operators
  enforce_tfa: boolean_filter_operators
  admin_access: boolean_filter_operators
  app_access: boolean_filter_operators
  permissions: directus_permissions_quantifier_filter
  permissions_func: count_function_filter_operators
  users: directus_access_quantifier_filter
  users_func: count_function_filter_operators
  roles: directus_access_quantifier_filter
  roles_func: count_function_filter_operators
  _and: [directus_policies_filter]
  _or: [directus_policies_filter]
}

input directus_revisions_filter {
  id: number_filter_operators
  activity: directus_activity_filter
  collection: string_filter_operators
  item: string_filter_operators
  data: string_filter_operators
  data_func: count_function_filter_operators
  delta: string_filter_operators
  delta_func: count_function_filter_operators
  parent: directus_revisions_filter
  version: directus_versions_filter
  _and: [directus_revisions_filter]
  _or: [directus_revisions_filter]
}

""""""
input directus_revisions_quantifier_filter {
  id: number_filter_operators
  activity: directus_activity_filter
  collection: string_filter_operators
  item: string_filter_operators
  data: string_filter_operators
  data_func: count_function_filter_operators
  delta: string_filter_operators
  delta_func: count_function_filter_operators
  parent: directus_revisions_filter
  version: directus_versions_filter
  _and: [directus_revisions_filter]
  _or: [directus_revisions_filter]
  _some: directus_revisions_filter
  _none: directus_revisions_filter
}

input directus_roles_filter {
  id: id_filter_operators
  name: string_filter_operators
  icon: string_filter_operators
  description: string_filter_operators
  parent: directus_roles_filter
  children: directus_roles_quantifier_filter
  children_func: count_function_filter_operators
  policies: directus_access_quantifier_filter
  policies_func: count_function_filter_operators
  users: directus_users_quantifier_filter
  users_func: count_function_filter_operators
  _and: [directus_roles_filter]
  _or: [directus_roles_filter]
}

""""""
input directus_roles_quantifier_filter {
  id: id_filter_operators
  name: string_filter_operators
  icon: string_filter_operators
  description: string_filter_operators
  parent: directus_roles_filter
  children: directus_roles_quantifier_filter
  children_func: count_function_filter_operators
  policies: directus_access_quantifier_filter
  policies_func: count_function_filter_operators
  users: directus_users_quantifier_filter
  users_func: count_function_filter_operators
  _and: [directus_roles_filter]
  _or: [directus_roles_filter]
  _some: directus_roles_filter
  _none: directus_roles_filter
}

input directus_sync_id_map_filter {
  id: number_filter_operators
  table: string_filter_operators
  sync_id: string_filter_operators
  local_id: string_filter_operators
  created_at: date_filter_operators
  created_at_func: datetime_function_filter_operators
  _and: [directus_sync_id_map_filter]
  _or: [directus_sync_id_map_filter]
}

input directus_users_filter {
  id: id_filter_operators
  first_name: string_filter_operators
  last_name: string_filter_operators
  email: string_filter_operators
  password: hash_filter_operators
  location: string_filter_operators
  title: string_filter_operators
  description: string_filter_operators
  tags: string_filter_operators
  tags_func: count_function_filter_operators
  avatar: directus_files_filter
  language: string_filter_operators
  tfa_secret: hash_filter_operators
  status: string_filter_operators
  role: directus_roles_filter
  token: hash_filter_operators
  last_access: date_filter_operators
  last_access_func: datetime_function_filter_operators
  last_page: string_filter_operators
  provider: string_filter_operators
  external_identifier: string_filter_operators
  auth_data: string_filter_operators
  auth_data_func: count_function_filter_operators
  email_notifications: boolean_filter_operators
  appearance: string_filter_operators
  theme_dark: string_filter_operators
  theme_light: string_filter_operators
  theme_light_overrides: string_filter_operators
  theme_light_overrides_func: count_function_filter_operators
  theme_dark_overrides: string_filter_operators
  theme_dark_overrides_func: count_function_filter_operators
  text_direction: string_filter_operators
  policies: directus_access_quantifier_filter
  policies_func: count_function_filter_operators
  _and: [directus_users_filter]
  _or: [directus_users_filter]
}

""""""
input directus_users_quantifier_filter {
  id: id_filter_operators
  first_name: string_filter_operators
  last_name: string_filter_operators
  email: string_filter_operators
  password: hash_filter_operators
  location: string_filter_operators
  title: string_filter_operators
  description: string_filter_operators
  tags: string_filter_operators
  tags_func: count_function_filter_operators
  avatar: directus_files_filter
  language: string_filter_operators
  tfa_secret: hash_filter_operators
  status: string_filter_operators
  role: directus_roles_filter
  token: hash_filter_operators
  last_access: date_filter_operators
  last_access_func: datetime_function_filter_operators
  last_page: string_filter_operators
  provider: string_filter_operators
  external_identifier: string_filter_operators
  auth_data: string_filter_operators
  auth_data_func: count_function_filter_operators
  email_notifications: boolean_filter_operators
  appearance: string_filter_operators
  theme_dark: string_filter_operators
  theme_light: string_filter_operators
  theme_light_overrides: string_filter_operators
  theme_light_overrides_func: count_function_filter_operators
  theme_dark_overrides: string_filter_operators
  theme_dark_overrides_func: count_function_filter_operators
  text_direction: string_filter_operators
  policies: directus_access_quantifier_filter
  policies_func: count_function_filter_operators
  _and: [directus_users_filter]
  _or: [directus_users_filter]
  _some: directus_users_filter
  _none: directus_users_filter
}

input directus_versions_filter {
  id: id_filter_operators
  key: string_filter_operators
  name: string_filter_operators
  collection: string_filter_operators
  item: string_filter_operators
  hash: string_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  user_created: directus_users_filter
  user_updated: directus_users_filter
  delta: string_filter_operators
  delta_func: count_function_filter_operators
  _and: [directus_versions_filter]
  _or: [directus_versions_filter]
}

input enterprise_tags_filter {
  id: number_filter_operators
  name: string_filter_operators
  color: string_filter_operators
  created_at: date_filter_operators
  created_at_func: datetime_function_filter_operators
  _and: [enterprise_tags_filter]
  _or: [enterprise_tags_filter]
}

input enterprises_filter {
  id: number_filter_operators
  notes: string_filter_operators
  created_at: date_filter_operators
  created_at_func: datetime_function_filter_operators
  company_size: string_filter_operators
  linkedin: string_filter_operators
  organization_name: string_filter_operators
  fiscal_identification: string_filter_operators
  updated_at: date_filter_operators
  updated_at_func: datetime_function_filter_operators
  commercial_name: string_filter_operators
  fiscal_identification_type: string_filter_operators
  country: string_filter_operators
  normalized_address: string_filter_operators
  website: string_filter_operators
  phone_prefix: string_filter_operators
  phone_number: string_filter_operators
  acquisition_source: string_filter_operators
  internal_owner: string_filter_operators
  industries: enterprises_industries_quantifier_filter
  industries_func: count_function_filter_operators
  _and: [enterprises_filter]
  _or: [enterprises_filter]
  keywords: enterprises_keywords_quantifier_filter
  technologies: enterprises_technologies_quantifier_filter
  locations: enterprises_locations_quantifier_filter
}

input enterprises_industries_filter {
  id: number_filter_operators
  enterprises_id: enterprises_filter
  industries_id: industries_filter
  _and: [enterprises_industries_filter]
  _or: [enterprises_industries_filter]
}

""""""
input enterprises_industries_quantifier_filter {
  id: number_filter_operators
  enterprises_id: enterprises_filter
  industries_id: industries_filter
  _and: [enterprises_industries_filter]
  _or: [enterprises_industries_filter]
  _some: enterprises_industries_filter
  _none: enterprises_industries_filter
}

input enterprises_keywords_filter {
  id: number_filter_operators
  enterprises_id: enterprises_filter
  keywords_id: keywords_filter
  _and: [enterprises_keywords_filter]
  _or: [enterprises_keywords_filter]
}

""""""
input enterprises_keywords_quantifier_filter {
  id: number_filter_operators
  enterprises_id: enterprises_filter
  keywords_id: keywords_filter
  _and: [enterprises_keywords_filter]
  _or: [enterprises_keywords_filter]
  _some: enterprises_keywords_filter
  _none: enterprises_keywords_filter
}

input enterprises_locations_filter {
  id: number_filter_operators
  enterprises_id: enterprises_filter
  locations_id: locations_filter
  _and: [enterprises_locations_filter]
  _or: [enterprises_locations_filter]
}

""""""
input enterprises_locations_quantifier_filter {
  id: number_filter_operators
  enterprises_id: enterprises_filter
  locations_id: locations_filter
  _and: [enterprises_locations_filter]
  _or: [enterprises_locations_filter]
  _some: enterprises_locations_filter
  _none: enterprises_locations_filter
}

input enterprises_tags_filter {
  id: number_filter_operators
  enterprise_id: enterprises_filter
  tag_id: enterprise_tags_filter
  created_at: date_filter_operators
  created_at_func: datetime_function_filter_operators
  _and: [enterprises_tags_filter]
  _or: [enterprises_tags_filter]
  enterprises_id: enterprises_filter
}

input enterprises_technologies_filter {
  id: number_filter_operators
  enterprises_id: enterprises_filter
  technologies_id: technologies_filter
  _and: [enterprises_technologies_filter]
  _or: [enterprises_technologies_filter]
}

""""""
input enterprises_technologies_quantifier_filter {
  id: number_filter_operators
  enterprises_id: enterprises_filter
  technologies_id: technologies_filter
  _and: [enterprises_technologies_filter]
  _or: [enterprises_technologies_filter]
  _some: enterprises_technologies_filter
  _none: enterprises_technologies_filter
}

input hash_filter_operators {
  _null: Boolean
  _nnull: Boolean
  _empty: Boolean
  _nempty: Boolean
}

input id_filter_operators {
  _eq: ID
  _neq: ID
  _contains: ID
  _icontains: ID
  _ncontains: ID
  _starts_with: ID
  _nstarts_with: ID
  _istarts_with: ID
  _nistarts_with: ID
  _ends_with: ID
  _nends_with: ID
  _iends_with: ID
  _niends_with: ID
  _in: [ID]
  _nin: [ID]
  _null: Boolean
  _nnull: Boolean
  _empty: Boolean
  _nempty: Boolean
}

input industries_filter {
  id: number_filter_operators
  created_at: date_filter_operators
  created_at_func: datetime_function_filter_operators
  name: string_filter_operators
  updated_at: date_filter_operators
  updated_at_func: datetime_function_filter_operators
  _and: [industries_filter]
  _or: [industries_filter]
}

input keywords_filter {
  id: number_filter_operators
  created_at: date_filter_operators
  created_at_func: datetime_function_filter_operators
  name: string_filter_operators
  updated_at: date_filter_operators
  updated_at_func: datetime_function_filter_operators
  _and: [keywords_filter]
  _or: [keywords_filter]
}

input locations_filter {
  id: number_filter_operators
  city: string_filter_operators
  country: string_filter_operators
  created_at: date_filter_operators
  created_at_func: datetime_function_filter_operators
  province: string_filter_operators
  updated_at: date_filter_operators
  updated_at_func: datetime_function_filter_operators
  _and: [locations_filter]
  _or: [locations_filter]
}

input number_filter_operators {
  _eq: GraphQLStringOrFloat
  _neq: GraphQLStringOrFloat
  _in: [GraphQLStringOrFloat]
  _nin: [GraphQLStringOrFloat]
  _gt: GraphQLStringOrFloat
  _gte: GraphQLStringOrFloat
  _lt: GraphQLStringOrFloat
  _lte: GraphQLStringOrFloat
  _null: Boolean
  _nnull: Boolean
  _between: [GraphQLStringOrFloat]
  _nbetween: [GraphQLStringOrFloat]
}

input people_filter {
  id: number_filter_operators
  notes: string_filter_operators
  created_at: date_filter_operators
  created_at_func: datetime_function_filter_operators
  primary_email: string_filter_operators
  linkedin: string_filter_operators
  full_name: string_filter_operators
  updated_at: date_filter_operators
  updated_at_func: datetime_function_filter_operators
  position_title: string_filter_operators
  department: string_filter_operators
  phone_prefix: string_filter_operators
  phone_number: string_filter_operators
  enterprise_relation_id: enterprises_filter
  decision_level: string_filter_operators
  acquisition_source: string_filter_operators
  internal_owner: string_filter_operators
  communication_consent: boolean_filter_operators
  tags: people_tags_quantifier_filter
  tags_func: count_function_filter_operators
  _and: [people_filter]
  _or: [people_filter]
  keywords: people_keywords_quantifier_filter
  technologies: people_technologies_quantifier_filter
  location_id: locations_filter
}

input people_keywords_filter {
  id: number_filter_operators
  keywords_id: keywords_filter
  people_id: people_filter
  _and: [people_keywords_filter]
  _or: [people_keywords_filter]
}

""""""
input people_keywords_quantifier_filter {
  id: number_filter_operators
  keywords_id: keywords_filter
  people_id: people_filter
  _and: [people_keywords_filter]
  _or: [people_keywords_filter]
  _some: people_keywords_filter
  _none: people_keywords_filter
}

input people_tags_filter {
  id: number_filter_operators
  person_id: people_filter
  tag_id: enterprise_tags_filter
  created_at: date_filter_operators
  created_at_func: datetime_function_filter_operators
  _and: [people_tags_filter]
  _or: [people_tags_filter]
}

""""""
input people_tags_quantifier_filter {
  id: number_filter_operators
  person_id: people_filter
  tag_id: enterprise_tags_filter
  created_at: date_filter_operators
  created_at_func: datetime_function_filter_operators
  _and: [people_tags_filter]
  _or: [people_tags_filter]
  _some: people_tags_filter
  _none: people_tags_filter
}

input people_technologies_filter {
  id: number_filter_operators
  people_id: people_filter
  technologies_id: technologies_filter
  _and: [people_technologies_filter]
  _or: [people_technologies_filter]
}

""""""
input people_technologies_quantifier_filter {
  id: number_filter_operators
  people_id: people_filter
  technologies_id: technologies_filter
  _and: [people_technologies_filter]
  _or: [people_technologies_filter]
  _some: people_technologies_filter
  _none: people_technologies_filter
}

input person_employment_history_filter {
  id: number_filter_operators
  created_at: date_filter_operators
  created_at_func: datetime_function_filter_operators
  end_date: date_filter_operators
  end_date_func: date_function_filter_operators
  is_current: boolean_filter_operators
  start_date: date_filter_operators
  start_date_func: date_function_filter_operators
  updated_at: date_filter_operators
  updated_at_func: datetime_function_filter_operators
  person_id: people_filter
  enterprise_id: enterprises_filter
  position_id: positions_filter
  _and: [person_employment_history_filter]
  _or: [person_employment_history_filter]
}

input positions_filter {
  id: number_filter_operators
  created_at: date_filter_operators
  created_at_func: datetime_function_filter_operators
  name: string_filter_operators
  updated_at: date_filter_operators
  updated_at_func: datetime_function_filter_operators
  _and: [positions_filter]
  _or: [positions_filter]
}

input segments_filter {
  id: number_filter_operators
  created_at: date_filter_operators
  created_at_func: datetime_function_filter_operators
  name: string_filter_operators
  total: number_filter_operators
  updated_at: date_filter_operators
  updated_at_func: datetime_function_filter_operators
  industry_id: industries_filter
  _and: [segments_filter]
  _or: [segments_filter]
}

input string_filter_operators {
  _eq: String
  _neq: String
  _contains: String
  _icontains: String
  _ncontains: String
  _starts_with: String
  _nstarts_with: String
  _istarts_with: String
  _nistarts_with: String
  _ends_with: String
  _nends_with: String
  _iends_with: String
  _niends_with: String
  _in: [String]
  _nin: [String]
  _null: Boolean
  _nnull: Boolean
  _empty: Boolean
  _nempty: Boolean
}

input technologies_filter {
  id: number_filter_operators
  created_at: date_filter_operators
  created_at_func: datetime_function_filter_operators
  name: string_filter_operators
  updated_at: date_filter_operators
  updated_at_func: datetime_function_filter_operators
  _and: [technologies_filter]
  _or: [technologies_filter]
}

input update_directus_sync_id_map_input {
  id: ID
  table: String
  sync_id: String
  local_id: String
  created_at: Date
}

input update_enterprise_tags_input {
  """ID autogenerado"""
  id: ID

  """Nombre de la etiqueta"""
  name: String
  color: String
  created_at: Date
}

input update_enterprises_industries_input {
  id: ID
  enterprises_id: update_enterprises_input
  industries_id: update_industries_input
}

input update_enterprises_input {
  """ID autogenerado"""
  id: ID

  """Notas adicionales"""
  notes: String

  """Fecha de creación automática"""
  created_at: Date

  """Rango de empleados"""
  company_size: String

  """URL del perfil de LinkedIn"""
  linkedin: String

  """Nombre oficial de la empresa (obligatorio)"""
  organization_name: String

  """Número de identificación fiscal"""
  fiscal_identification: String

  """Fecha de última modificación"""
  updated_at: Date

  """Nombre comercial o marca"""
  commercial_name: String

  """Tipo de documento fiscal"""
  fiscal_identification_type: String

  """País de la empresa (ISO-3166)"""
  country: String

  """Dirección con autocompletado Mapbox"""
  normalized_address: String

  """URL del sitio web"""
  website: String

  """Prefijo telefónico (+E.164)"""
  phone_prefix: String

  """Número telefónico"""
  phone_number: String

  """Cómo se adquirió el lead"""
  acquisition_source: String

  """Responsable interno"""
  internal_owner: String
  industries: [update_enterprises_industries_input]
  keywords: [update_enterprises_keywords_input]
  technologies: [update_enterprises_technologies_input]
  locations: [update_enterprises_locations_input]
}

input update_enterprises_keywords_input {
  id: ID
  enterprises_id: update_enterprises_input
  keywords_id: update_keywords_input
}

input update_enterprises_locations_input {
  id: ID
  enterprises_id: update_enterprises_input
  locations_id: update_locations_input
}

input update_enterprises_tags_input {
  id: ID
  enterprise_id: update_enterprises_input
  tag_id: update_enterprise_tags_input
  created_at: Date
  enterprises_id: update_enterprises_input
}

input update_enterprises_technologies_input {
  id: ID
  enterprises_id: update_enterprises_input
  technologies_id: update_technologies_input
}

input update_industries_input {
  id: ID

  """Fecha de creación"""
  created_at: Date

  """Nombre de la industria"""
  name: String

  """Fecha de última actualización"""
  updated_at: Date
}

input update_keywords_input {
  id: ID

  """Fecha de creación"""
  created_at: Date

  """Nombre de la palabra clave"""
  name: String

  """Fecha de última actualización"""
  updated_at: Date
}

input update_locations_input {
  id: ID

  """Ciudad"""
  city: String

  """País"""
  country: String

  """Fecha de creación"""
  created_at: Date

  """Provincia/Estado"""
  province: String

  """Fecha de última actualización"""
  updated_at: Date
}

input update_people_input {
  """ID autogenerado"""
  id: ID

  """Notas y comentarios adicionales"""
  notes: String

  """Fecha de creación automática"""
  created_at: Date

  """Email principal de contacto"""
  primary_email: String

  """URL del perfil de LinkedIn"""
  linkedin: String

  """Nombre completo de la persona (obligatorio)"""
  full_name: String

  """Fecha de última actualización"""
  updated_at: Date

  """Cargo o puesto de trabajo"""
  position_title: String

  """Área o departamento"""
  department: String

  """Prefijo telefónico (+E.164)"""
  phone_prefix: String

  """Número telefónico sin prefijo"""
  phone_number: String
  enterprise_relation_id: update_enterprises_input

  """Nivel de decisión en la organización"""
  decision_level: String

  """Cómo se adquirió el contacto"""
  acquisition_source: String

  """Responsable interno del contacto"""
  internal_owner: String

  """Consentimiento para comunicaciones"""
  communication_consent: Boolean
  tags: [update_people_tags_input]
  keywords: [update_people_keywords_input]
  technologies: [update_people_technologies_input]
  location_id: update_locations_input
}

input update_people_keywords_input {
  id: ID
  keywords_id: update_keywords_input
  people_id: update_people_input
}

input update_people_tags_input {
  id: ID
  person_id: update_people_input
  tag_id: update_enterprise_tags_input
  created_at: Date
}

input update_people_technologies_input {
  id: ID
  people_id: update_people_input
  technologies_id: update_technologies_input
}

input update_person_employment_history_input {
  id: ID
  created_at: Date
  end_date: Date

  """Indica si es el trabajo actual"""
  is_current: Boolean
  start_date: Date
  updated_at: Date
  person_id: update_people_input
  enterprise_id: update_enterprises_input
  position_id: update_positions_input
}

input update_positions_input {
  id: ID

  """Fecha de creación"""
  created_at: Date

  """Nombre del cargo/posición"""
  name: String

  """Fecha de última actualización"""
  updated_at: Date
}

input update_segments_input {
  id: ID
  created_at: Date
  name: String
  total: Int
  updated_at: Date
  industry_id: update_industries_input
}

input update_technologies_input {
  id: ID

  """Fecha de creación"""
  created_at: Date

  """Nombre de la tecnología"""
  name: String

  """Fecha de última actualización"""
  updated_at: Date
}